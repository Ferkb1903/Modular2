#!/bin/bash

# Script para limpiar el workspace antes de subirlo a GitHub
# Elimina archivos temporales, resultados y mantiene solo c√≥digo fuente

echo "üßπ LIMPIANDO WORKSPACE PARA GITHUB..."
echo "=========================================="

# Cambiar al directorio del proyecto
cd /home/fer/fer/brachytherapy

echo "üìÅ Eliminando archivos de resultados y temporales..."

# Eliminar archivos ROOT de resultados
rm -f *.root
echo "‚úÖ Archivos *.root eliminados"

# Eliminar archivos de imagen/plots
rm -f *.png *.jpg *.jpeg *.gif *.pdf
echo "‚úÖ Archivos de imagen eliminados"

# Eliminar archivos CSV de datos
rm -f *.csv
echo "‚úÖ Archivos *.csv eliminados"

# Eliminar archivos de texto de resultados
rm -f *.txt
echo "‚úÖ Archivos *.txt eliminados"

# Eliminar directorio build completo
if [ -d "build" ]; then
    rm -rf build/
    echo "‚úÖ Directorio build/ eliminado"
fi

# Eliminar directorios de resultados/an√°lisis
if [ -d "results" ]; then
    rm -rf results/
    echo "‚úÖ Directorio results/ eliminado"
fi

if [ -d "output" ]; then
    rm -rf output/
    echo "‚úÖ Directorio output/ eliminado"
fi

if [ -d "analysis" ]; then
    rm -rf analysis/
    echo "‚úÖ Directorio analysis/ eliminado"
fi

if [ -d "comparison" ]; then
    rm -rf comparison/
    echo "‚úÖ Directorio comparison/ eliminado"
fi

# Eliminar directorios de archivos antiguos
if [ -d "archive_old_analysis_scripts" ]; then
    rm -rf archive_old_analysis_scripts/
    echo "‚úÖ Directorio archive_old_analysis_scripts/ eliminado"
fi

if [ -d "archive_old_ascii_files" ]; then
    rm -rf archive_old_ascii_files/
    echo "‚úÖ Directorio archive_old_ascii_files/ eliminado"
fi

if [ -d "archive_old_results" ]; then
    rm -rf archive_old_results/
    echo "‚úÖ Directorio archive_old_results/ eliminado"
fi

# Eliminar scripts de an√°lisis Python (mantener solo los principales)
rm -f analisis_*.py
rm -f analyze_*.py
rm -f compare_*.py
rm -f generate_*.py
rm -f investigate_*.py
rm -f summary_*.py
rm -f visualize_*.py
echo "‚úÖ Scripts de an√°lisis Python eliminados"

# Eliminar archivos C de an√°lisis ROOT
rm -f *.C
echo "‚úÖ Archivos *.C eliminados"

# Eliminar archivos de backup
rm -f *.bak
rm -f *~
rm -f *.backup
echo "‚úÖ Archivos de backup eliminados"

# Eliminar directorio History si existe
if [ -d "History" ]; then
    rm -rf History/
    echo "‚úÖ Directorio History/ eliminado"
fi

# Eliminar test_macro si existe
if [ -d "test_macro" ]; then
    rm -rf test_macro/
    echo "‚úÖ Directorio test_macro/ eliminado"
fi

echo ""
echo "üìã ARCHIVOS MANTENIDOS (c√≥digo fuente esencial):"
echo "=========================================="

# Mostrar estructura limpia
find . -type f -not -path "./.git/*" | sort

echo ""
echo "‚úÖ WORKSPACE LIMPIO PARA GITHUB"
echo "=========================================="
echo "üìÅ Mantenidos:"
echo "   ‚Ä¢ C√≥digo fuente C++ (src/, include/)"
echo "   ‚Ä¢ Archivos de configuraci√≥n (CMakeLists.txt, Makefile)"
echo "   ‚Ä¢ Macros principales (*.mac)"
echo "   ‚Ä¢ Scripts de ejecuci√≥n principales"
echo "   ‚Ä¢ Documentaci√≥n (*.md)"
echo "   ‚Ä¢ Archivo principal (main.cc, Brachy.cc)"
echo ""
echo "üóëÔ∏è  Eliminados:"
echo "   ‚Ä¢ Resultados de simulaci√≥n (*.root)"
echo "   ‚Ä¢ Im√°genes y plots (*.png, *.jpg)"
echo "   ‚Ä¢ Archivos de datos (*.csv, *.txt)"
echo "   ‚Ä¢ Directorios de compilaci√≥n (build/)"
echo "   ‚Ä¢ Scripts de an√°lisis temporales"
echo "   ‚Ä¢ Archivos de backup"
echo ""
echo "üöÄ Listo para: git add . && git commit && git push"